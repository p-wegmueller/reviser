[{"path":"https://p-wegmueller.github.io/reviser/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 reviser authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://p-wegmueller.github.io/reviser/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Burri. Author, maintainer, copyright holder. Philipp Wegmueller. Author, copyright holder.","code":""},{"path":"https://p-wegmueller.github.io/reviser/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burri M, Wegmueller P (2025). reviser: Tools Studying Revision Properties Real-Time Time Series Vintages. R package version 0.1.0.9000, https://p-wegmueller.github.io/reviser/.","code":"@Manual{,   title = {reviser: Tools for Studying Revision Properties in Real-Time Time Series Vintages},   author = {Marc Burri and Philipp Wegmueller},   year = {2025},   note = {R package version 0.1.0.9000},   url = {https://p-wegmueller.github.io/reviser/}, }"},{"path":"https://p-wegmueller.github.io/reviser/index.html","id":"reviser-","dir":"","previous_headings":"","what":"Tools for Studying Revision Properties in Real-Time Time Series Vintages","title":"Tools for Studying Revision Properties in Real-Time Time Series Vintages","text":"reviser R package designed working time-series vintages data. package provides tools clean, visualize, analyze time-series revisions.","code":""},{"path":"https://p-wegmueller.github.io/reviser/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Studying Revision Properties in Real-Time Time Series Vintages","text":"can install development version reviser GitHub :","code":"# Install devtools if not already installed # install.packages(\"devtools\")  # Install the reviser package devtools::install_github(\"p-wegmueller/reviser\")"},{"path":"https://p-wegmueller.github.io/reviser/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tools for Studying Revision Properties in Real-Time Time Series Vintages","text":"","code":"library(reviser) suppressMessages(library(dplyr))  gdp <- gdp %>% tsbox::ts_pc() %>% tsbox::ts_span(start = \"1980-01-01\")   gdp_wide <- vintages_wide(gdp)  gdp_long <- vintages_long(gdp_wide, keep_na = FALSE)  plot_vintages(   gdp_long %>%    filter(     pub_date >= as.Date(\"2009-01-01\") & pub_date < as.Date(\"2010-01-01\"),     time < as.Date(\"2010-01-01\") & time > as.Date(\"2008-01-01\")     ),   type = \"line\",   title = \"Revisions of GDP during the financial crisis\",   subtitle = \"qoq growth rates\") final_release <- get_nth_release(gdp_long, n = 16)  df <- get_nth_release(gdp_long, n = 0:6)  summary <- get_revision_analysis(df, final_release) print(summary) #> # A tibble: 7 × 10 #>   release       N `Bias (mean)` `Bias (p-value)` Minimum Maximum `Std. Dev.` #>   <chr>     <dbl>         <dbl>            <dbl>   <dbl>   <dbl>       <dbl> #> 1 release_0   163       0.00983            0.762  -1.34     1.60       0.414 #> 2 release_1   163      -0.0204             0.477  -0.981    1.13       0.365 #> 3 release_2   163      -0.0223             0.427  -0.981    1.13       0.357 #> 4 release_3   163      -0.0158             0.532  -0.932    1.09       0.323 #> 5 release_4   163      -0.0121             0.617  -0.932    1.05       0.307 #> 6 release_5   163      -0.0115             0.600  -0.930    1.05       0.279 #> 7 release_6   163      -0.0216             0.279  -0.603    1.05       0.254 #> # ℹ 3 more variables: `Noise/Signal` <dbl>, Correlation <dbl>, #> #   `Correlation (p-value)` <dbl> efficient_release <- get_first_efficient_release(df, final_release) summary(efficient_release) #> Efficient release:  0  #>  #> Model summary:  #>  #> Call: #> stats::lm(formula = formula, data = df_wide) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.44976 -0.24845  0.06358  0.23515  0.90387  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.04755    0.03551   1.339    0.182     #> release_0    0.93135    0.02827  32.943   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.4077 on 161 degrees of freedom #>   (16 observations deleted due to missingness) #> Multiple R-squared:  0.8708, Adjusted R-squared:   0.87  #> F-statistic:  1085 on 1 and 161 DF,  p-value: < 2.2e-16 #>  #>  #> Test summary:  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept) = 0 #> release_0 = 1 #>  #> Model 1: restricted model #> Model 2: final ~ release_0 #>  #> Note: Coefficient covariance matrix supplied. #>  #>   Res.Df Df      F  Pr(>F)   #> 1    163                     #> 2    161  2 2.8555 0.06045 . #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://p-wegmueller.github.io/reviser/reference/gdp_us.html","id":null,"dir":"Reference","previous_headings":"","what":"Vintages Data — gdp_us","title":"Vintages Data — gdp_us","text":"collection real-time datasets.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/gdp_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vintages Data — gdp_us","text":"","code":"gdp_us  gdp_uk"},{"path":"https://p-wegmueller.github.io/reviser/reference/gdp_us.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vintages Data — gdp_us","text":"gdp_us: Quarterly Vintages (Billions real dollars, seasonally adjusted)","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/gdp_us.html","id":"datasets","dir":"Reference","previous_headings":"","what":"Datasets","title":"Vintages Data — gdp_us","text":"gdp_us: Source: Federal Reserve Bank Philadelphia Timeframe: Q1 1970 - Q2 2024 Real-Time Vintages: January 1980 - October 2024 Frequency: Quarterly Format: tibble quarterly observations 3 variables: time: Date observation. pub_date: Publication date vintage values: Numeric, real GDP (seasonally adjusted). gdp_uk: Source: Bank England Timeframe: Q1 1955 - Q2 2016 Real-Time Vintages: March 1976 - September 2016 Frequency: Quarterly Format: tibble quarterly observations 3 variables: time: Date observation. pub_date: Publication date vintage values: Numeric, real GDP (seasonally adjusted).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/gdp_us.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vintages Data — gdp_us","text":"","code":"# Load [gdp_us] data(gdp_us)"},{"path":"https://p-wegmueller.github.io/reviser/reference/generate_basic_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Basic Report on Data Revisions — generate_basic_report","title":"Generate a Basic Report on Data Revisions — generate_basic_report","text":"function creates basic PDF report summarizing data revisions. report includes title, author(s), optionally logo. uses customizable R Markdown template requires reviser package's built-templates.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/generate_basic_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Basic Report on Data Revisions — generate_basic_report","text":"","code":"generate_basic_report(   data,   output_file = \"report.pdf\",   title = \"Title of my basic report on data revisions\",   author = \"Author(s)\",   include_logo = TRUE,   logo_path = NULL,   template_file = NULL )"},{"path":"https://p-wegmueller.github.io/reviser/reference/generate_basic_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Basic Report on Data Revisions — generate_basic_report","text":"data data frame tibble. input dataset included report. output_file string. name output file. Defaults \"report.pdf\". title string. title report. Defaults \"Title basic report data revisions\". author string. name(s) author(s) report. Defaults \"Author(s)\". include_logo logical. TRUE, logo included report. Defaults TRUE. logo_path string. file path logo image. NULL, default logo provided reviser package used. Ignored include_logo = FALSE. template_file string. file path custom LaTeX template report. NULL, default template provided reviser package used.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/generate_basic_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Basic Report on Data Revisions — generate_basic_report","text":"message indicating location generated report.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/generate_basic_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Basic Report on Data Revisions — generate_basic_report","text":"Logo Handling: include_logo TRUE logo_path provided, default logo package templates used. Template Handling: template_file provided, used generating report; otherwise, default template used. report rendered using rmarkdown::render() pdf_document output format xelatex LaTeX engine.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/generate_basic_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Basic Report on Data Revisions — generate_basic_report","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage with default options: generate_basic_report(data = my_data)  # Example with custom options: generate_basic_report(   data = my_data,   output_file = \"custom_report.pdf\",   title = \"Custom Report Title\",   author = \"John Doe\",   include_logo = TRUE,   logo_path = \"path/to/logo.png\",   template_file = \"path/to/template.tex\" ) } # }"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_days_to_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","title":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","text":"Computes number days publication date (pub_date) release time period (time) end date record dataset.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_days_to_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","text":"","code":"get_days_to_release(df)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_days_to_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","text":"df data frame containing data vintages. data frame must include columns pub_date (publication date release) time (corresponding time period data).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_days_to_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","text":"data frame additional column days_to_release representing number days publication date (pub_date) time period (time) release.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_days_to_release.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","text":"function calculates difference pub_date time row dataset. result expressed number days release publication date corresponding time period end. dataset wide format, first transformed long format using vintages_long.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_days_to_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Number of Days Between Period End and First Release — get_days_to_release","text":"","code":"# Example data df <- reviser::gdp_us  # Calculate days to release df_with_days <- get_days_to_release(df)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_efficient_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","title":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","text":"Identifies first release sequence vintages \"efficient\" relative final release. release deemed efficient satisfies specific conditions unbiasedness efficiency, tested using Mincer-Zarnowitz type linear regression hypothesis testing.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_efficient_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","text":"","code":"get_first_efficient_release(   df,   final_release,   significance = 0.05,   test_all = FALSE )"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_efficient_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","text":"df data frame class tbl_release containing vintage data. must include columns: time: reference period (e.g., quarter month). value: observed value given release. release: release number identifier. final_release data frame containing final release data. must include columns: time: reference period. value: observed final value given period. significance numeric value specifying significance level hypothesis test (default 0.05). test_all logical value indicating whether test releases, even finding first efficient release (default FALSE).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_efficient_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","text":"list class list_eff_rel following elements: e: index first efficient release. (0 indexed) data: long-format data frame containing vintage data final release appended. models: list linear regression models fitted release. tests: list hypothesis test results release.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_efficient_release.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","text":"function performs following steps: Validates inputs ensures df final_release correct format. Iteratively tests release efficiency using linear regression model form: $$final = \\beta_0 + \\beta_1 \\cdot release_i + \\epsilon$$ null hypothesis efficiency : \\(\\beta_0 = 0\\) (bias) \\(\\beta_1 = 1\\) (efficiency) Uses heteroskedasticity autocorrelation consistent (HAC) standard errors robust hypothesis testing. Stops testing first efficient release found (unless test_all = TRUE). efficient release found, warning issued.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_efficient_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the First Efficient Release in Vintage Data — get_first_efficient_release","text":"","code":"# Example data df <- get_nth_release(tsbox::ts_pc(reviser::gdp_us), n = 0:3)  final_release <- get_nth_release(tsbox::ts_pc(reviser::gdp_us), n = 10)  # Identify the first efficient release result <- get_first_efficient_release(df, final_release, significance = 0.05)  # Access the index of the first efficient release result$e #> [1] 0"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the First Data Release (Vintage) — get_first_release","title":"Extract the First Data Release (Vintage) — get_first_release","text":"Filters input dataset return earliest release (vintage) time period.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the First Data Release (Vintage) — get_first_release","text":"","code":"get_first_release(df, diagonal = FALSE)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the First Data Release (Vintage) — get_first_release","text":"df data frame containing data vintages. data frame must include columns pub_date (publication date release) time (corresponding time period data). diagonal Logical. TRUE, function returns real first releases.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the First Data Release (Vintage) — get_first_release","text":"filtered data frame containing first release(s). resulting data frame assigned class tbl_release indicate structure.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_release.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the First Data Release (Vintage) — get_first_release","text":"time period, function identifies release earliest publication date (pub_date). new column release added labels rows resulting data frame release_0. diagonal set TRUE, function returns real first releases. historic values vintages exist returned.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_first_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the First Data Release (Vintage) — get_first_release","text":"","code":"# Example data df <- reviser::gdp_us  # Get the first release for each time period first_release <- get_first_release(df)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_fixed_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Vintage Values from a Data Frame — get_fixed_release","title":"Extract Vintage Values from a Data Frame — get_fixed_release","text":"statistical agencies make final revision data certain period time give month year. function extracts values given month quarter specified  number years initial release.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_fixed_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Vintage Values from a Data Frame — get_fixed_release","text":"","code":"get_fixed_release(df, years, month = NULL, quarter = NULL)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_fixed_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Vintage Values from a Data Frame — get_fixed_release","text":"df data frame containing columns pub_date (publication date) time (observation date). years number years pub_date values extracted. month optional parameter specifying target month name (\"July\") integer (7). used quarter. quarter optional parameter specifying target quarter (1-4). used month.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_fixed_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Vintage Values from a Data Frame — get_fixed_release","text":"filtered data frame containing values matching specified criteria.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_fixed_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Vintage Values from a Data Frame — get_fixed_release","text":"","code":"df <- reviser::gdp_us dta <- get_fixed_release(df, month = \"July\", years = 3) dta <- get_fixed_release(df, month = 7, years = 3) dta <- get_fixed_release(df, quarter = 3, years = 3)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_latest_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Latest Data Release (Vintage) — get_latest_release","title":"Extract the Latest Data Release (Vintage) — get_latest_release","text":"Filters input dataset return recent release (vintage) time period.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_latest_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Latest Data Release (Vintage) — get_latest_release","text":"","code":"get_latest_release(df)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_latest_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Latest Data Release (Vintage) — get_latest_release","text":"df data frame containing data vintages. data frame must include columns pub_date (publication date release) time (corresponding time period data).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_latest_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Latest Data Release (Vintage) — get_latest_release","text":"filtered data frame containing recent release(s). resulting data frame assigned class tbl_release indicate structure.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_latest_release.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the Latest Data Release (Vintage) — get_latest_release","text":"time period, function identifies release latest publication date (pub_date) adds column release labels release release_N, N release index (zero indexed).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_latest_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Latest Data Release (Vintage) — get_latest_release","text":"","code":"# Example data df <- reviser::gdp_us  # Get the latest release for each time period latest_release <- get_latest_release(df)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_nth_release.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Nth Data Release (Vintage) — get_nth_release","title":"Extract the Nth Data Release (Vintage) — get_nth_release","text":"Filters input dataset return Nth release (vintage) data time period. function supports selecting first, latest, specific numbered release.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_nth_release.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Nth Data Release (Vintage) — get_nth_release","text":"","code":"get_nth_release(df, n = 0, diagonal = FALSE)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_nth_release.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Nth Data Release (Vintage) — get_nth_release","text":"df data frame containing data vintages. data frame must include columns pub_date (publication date release) time (corresponding time period data). n release number extract. Accepts: - positive integer vector (e.g., 1 first release, 2 second, etc.). - \"first\" extract first release. - \"latest\" extract recent release. Default 1 (first release). diagonal Logical. TRUE, function returns real first releases.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_nth_release.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Nth Data Release (Vintage) — get_nth_release","text":"filtered data frame containing specified release(s). resulting data frame assigned class tbl_release indicate structure. diagonal set TRUE, function returns real first releases. historic values vintages exist returned.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_nth_release.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the Nth Data Release (Vintage) — get_nth_release","text":"behavior depends value n: Non-negative integer: function retrieves Nth release time period (e.g., 0 = first release, 1 = second release, etc.). \"first\": Retrieves first release time period (via get_first_release). \"latest\": Retrieves recent release time period (via get_latest_release).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_nth_release.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Nth Data Release (Vintage) — get_nth_release","text":"","code":"# Example data df <- reviser::gdp_us  # Get the first release (n = 0) first_release <- get_nth_release(df, n = 0)  # Get the latest release latest_release <- get_nth_release(df, n = \"latest\")  # Get the second release (n = 1) second_release <- get_nth_release(df, n = 1)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_releases_by_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data Releases for a Specific Date — get_releases_by_date","title":"Get Data Releases for a Specific Date — get_releases_by_date","text":"Filters input dataset return releases corresponding specific time period (date).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_releases_by_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data Releases for a Specific Date — get_releases_by_date","text":"","code":"get_releases_by_date(df, date)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_releases_by_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data Releases for a Specific Date — get_releases_by_date","text":"df data frame containing data vintages. data frame must include columns pub_date (publication date release) time (corresponding time period data). date Date object specifying time period (date) releases retrieved.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_releases_by_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data Releases for a Specific Date — get_releases_by_date","text":"data frame containing releases specified date. returned data frame include structure input, filtered include rows matching date time column.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_releases_by_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Data Releases for a Specific Date — get_releases_by_date","text":"function filters input data based specified date time column. input dataset must pub_date time columns, time period match given date. dataset wide format, first transformed long format using helper function vintages_long.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_releases_by_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Data Releases for a Specific Date — get_releases_by_date","text":"","code":"# Example data df <- reviser::gdp_us  # Get releases for a specific date date <- as.Date(\"2020-04-01\") releases_on_date <- get_releases_by_date(df, date)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revision_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Revision Analysis Summary Statistics — get_revision_analysis","title":"Revision Analysis Summary Statistics — get_revision_analysis","text":"Calculates comprehensive set summary statistics hypothesis tests revisions initial final data releases.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revision_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Revision Analysis Summary Statistics — get_revision_analysis","text":"","code":"get_revision_analysis(df, final_release, degree = 1)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revision_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Revision Analysis Summary Statistics — get_revision_analysis","text":"df data frame containing initial data releases. Must include columns: time: time variable. value: observed values initial release. Optionally, release (release identifier) id (grouping variable). final_release data frame containing final release data. Must include columns: time: time variable (matching initial release data). value: observed values final release. degree integer 1 5 specifying level detail output: 1: Default, descriptive statistics (bias, min/max, standard deviation, noise/signal ratio, correlation). 2: Efficiency tests (bias intercept slope tests, efficiency tests intercept slope). 3: Orthogonality tests (correlation, autocorrelation, Theil's U statistics, seasonality tests). 4: News vs. noise tests (p-values news noise tests). 5: Full set statistics tests.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revision_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Revision Analysis Summary Statistics — get_revision_analysis","text":"data frame one row per grouping (applicable) columns summary statistics test results. resulting data frame class revision_summary.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revision_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Revision Analysis Summary Statistics — get_revision_analysis","text":"function performs variety statistical analyses understand nature revisions initial final data releases. function: Checks input data consistency transforms necessary. Merges initial final release datasets time variable optional grouping variables (id release). Computes summary statistics mean, standard deviation, range revisions. Performs hypothesis tests bias, efficiency, correlation using robust methods (e.g., Newey-West standard errors). Includes tests seasonality, noise, news effects. Key tests include: Bias Tests: Tests presence mean bias regression bias. Efficiency Tests: Tests whether revisions orthogonal initial values. Autocorrelation Seasonality: Tests serial correlation seasonal patterns revisions. Theil's U Statistics: Measures predictive accuracy initial releases relative final values. Noise vs. News: Differentiates unpredictable errors (noise) systematic adjustments (news). function supports grouped calculations based presence id release columns input. following statistics tests calculated: N: number observations group. Frequency: inferred data frequency (e.g., 12 monthly 4 quarterly data). Bias (mean): mean revision, testing whether revisions systematically biased. Bias (p-value): p-value t-test evaluating significance mean revision. Bias (robust p-value): Newey-West HAC robust p-value mean revision test. Bias (intercept): Intercept regression final values initial values, testing systematic bias. Bias (intercept p-value): p-value intercept test. Bias (slope): Slope regression final values initial values, testing alignment . Bias (slope p-value): p-value slope test, null hypothesis slope = 1. Efficiency (intercept): Intercept regression revisions initial values, testing forecast efficiency. Efficiency (intercept p-value): p-value efficiency intercept test. Efficiency (slope): Slope regression revisions initial values, testing forecast efficiency. Efficiency (slope p-value): p-value efficiency slope test, null hypothesis slope = 0. Minimum: minimum revision group. Maximum: maximum revision group. Std. Dev.: standard deviation revisions, indicating variability. Noise/Signal: ratio standard deviation revisions standard deviation final values. Correlation: Pearson correlation revisions initial values, testing relationship. Correlation (p-value): p-value significance correlation. Autocorrelation (1st): first-order autocorrelation revisions, measuring persistence. Autocorrelation (1st p-value): p-value first-order autocorrelation test. Autocorrelation 4th (Ljung-Box p-value): p-value Ljung-Box test higher-order autocorrelation. Theil's U1: normalized measure forecast accuracy, comparing root mean squared error (RMSE) revisions RMSE final initial values. Theil's U2: measure comparing forecast changes actual changes. Seasonality (Ljung-Box p-value): Tests seasonality revisions using Ljung-Box test lags matching data frequency. Seasonality (Friedman p-value): Tests seasonality revisions using Friedman test. News test (p-value): Tests whether revisions explained information final values. Noise test (p-value): Tests whether revisions uncorrelated initial values.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revision_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Revision Analysis Summary Statistics — get_revision_analysis","text":"","code":"# Example usage: df <- get_nth_release(reviser::gdp_us, n = 0:3)  final_release <- get_nth_release(reviser::gdp_us, n = \"latest\")  results <- get_revision_analysis(df, final_release) #> Warning: Both 'release' and 'pub_date' columns are present in 'df. The 'release' column will be used. print(results) #> # A tibble: 4 × 10 #>   release       N `Bias (mean)` `Bias (p-value)` Minimum Maximum `Std. Dev.` #>   <chr>     <dbl>         <dbl>            <dbl>   <dbl>   <dbl>       <dbl> #> 1 release_0   219         4479.        7.81e-111       0   6919.       1499. #> 2 release_1   218         4443.        7.26e-110       0   6803.       1495. #> 3 release_2   217         4410.        5.54e-109       0   6737.       1491. #> 4 release_3   216         4377.        4.22e-108       0   6658.       1486. #> # ℹ 3 more variables: `Noise/Signal` <dbl>, Correlation <dbl>, #> #   `Correlation (p-value)` <dbl>"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Revisions in Vintage Data — get_revisions","title":"Calculate Revisions in Vintage Data — get_revisions","text":"Computes revisions vintage data based specified reference points: fixed reference date, nth release, specified interval. function allows users analyze differences data vintages across time.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Revisions in Vintage Data — get_revisions","text":"","code":"get_revisions(df, interval = NULL, nth_release = NULL, ref_date = NULL)"},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Revisions in Vintage Data — get_revisions","text":"df data frame containing vintage data. data frame must include least following columns: pub_date: publication date vintage. time: reference period (e.g., quarter month). value: observed value given vintage reference period. interval positive integer specifying lag (periods) vintages compute revisions. Defaults 1 parameter specified. nth_release positive integer \"latest\", specifying release use reference revisions. \"latest\", recent vintage used. ref_date date specifying fixed reference publication date compare vintages .","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revisions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Revisions in Vintage Data — get_revisions","text":"data frame (tibble) class tbl_revision, following columns: pub_date: publication date vintage. time: reference period (e.g., quarter month). value: calculated revision, .e., difference observed value reference value.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revisions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Revisions in Vintage Data — get_revisions","text":"function supports three mutually exclusive methods calculating revisions: Reference date (ref_date): Computes revisions relative fixed publication date. Interval (interval): Computes revisions relative vintages published interval periods earlier. Nth release (nth_release): Computes revisions relative nth vintage release reference period. method explicitly specified, interval = 1 used default. Input validation ensures one ref_date, nth_release, interval specified.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/get_revisions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Revisions in Vintage Data — get_revisions","text":"","code":"# Example data df <- reviser::gdp_us  # Calculate revisions using an interval of 1 revisions_interval <- get_revisions(df, interval = 1)  # Calculate revisions using a fixed reference date revisions_date <- get_revisions(df, ref_date = as.Date(\"2023-02-01\"))  # Calculate revisions relative to the nth release (2nd release) revisions_nth <- get_revisions(df, nth_release = 1)"},{"path":"https://p-wegmueller.github.io/reviser/reference/kk_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","title":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","text":"Implements generalized Kishor-Koenig (KK) model nowcasting forecasting state-space models, allowing multiple vintages data, efficient estimation, Kalman filtering smoothing.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/kk_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","text":"","code":"kk_nowcast(df, e, h = 0, model = \"Kishor-Koenig\", trace = 0)"},{"path":"https://p-wegmueller.github.io/reviser/reference/kk_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","text":"df data frame containing time series data either \"long\" \"wide\" format. must include columns time index different release vintages. e integer indicating number data vintages include model. Must greater 0. h integer specifying forecast horizon. Default 0, implies forecasts. Must greater equal 0. model string specifying type model use. Options : - \"Kishor-Koenig\" \"KK\" (default): Full Kishor-Koenig model. - \"Howrey\": Howrey's simplified framework. - \"Classical\": Classical model without vintage effects. trace integer controlling level output optimization procedure. Default 0 (minimal output).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/kk_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","text":"list following components: forecast_states tibble forecasted state variables, including forecast dates. Returned h > 0. filtered_states tibble filtered state variables based Kalman filter. observations tibble observed variables used model. forecast_observation tibble forecasted observations. Returned h > 0. smoothed_states tibble smoothed state variables based Kalman smoother. kk_model_mat list KK model matrices (e.g., transition observation matrices). ss_model_mat list state-space model matrices derived KK model. params Estimated model parameters, including covariance terms. fit fitted model object SUR estimation procedure.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/kk_nowcast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","text":"function supports multiple models, including full Kishor-Koenig framework, Howrey's model, classical approach. handles data preprocessing, estimation system equations using Seemingly Unrelated Regressions (SUR), application Kalman filter smoother. function requires well-structured input data multiple vintages. time series must regular, function automatically checks transforms data needed.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/kk_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized Kishor-Koenig Model for Nowcasting — kk_nowcast","text":"","code":"# Example usage: df <- get_nth_release(tsbox::ts_span(tsbox::ts_pc(reviser::gdp_us), start = \"1980-01-01\"), n = 0:1) e <- 1  # Number of efficient release h <- 2  # Forecast horizon model_result <- kk_nowcast(df, e, h = h, model = \"Kishor-Koenig\") #> Warning: Ignoring columns: pub_date  model_result$params #>           F0          G01          G00           v0         eps0  #>  0.161673050 -0.007862814  0.974344214  1.542794735  0.035485021"},{"path":"https://p-wegmueller.github.io/reviser/reference/plot_vintages.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Vintages Data — plot_vintages","title":"Plot Vintages Data — plot_vintages","text":"flexible function visualize vintage data using various plot types line plots, point plots, bar plots, boxplots. function ensures input data validated appropriately transformed plotting.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/plot_vintages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Vintages Data — plot_vintages","text":"","code":"plot_vintages(   df,   type = \"line\",   dim_col = \"pub_date\",   title = \"\",   subtitle = \"\",   ylab = \"\",   p = NULL )"},{"path":"https://p-wegmueller.github.io/reviser/reference/plot_vintages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Vintages Data — plot_vintages","text":"df data frame containing vintage data plotted. Must include least two columns: one time (time) one value (value). type character string specifying type plot create. Options : \"line\": Line plot (default). \"point\": Scatter plot. \"bar\": Bar plot. \"boxplot\": Boxplot. dim_col character string specifying column name df represents publication dates grouping dimensions (e.g. \"release\"). Defaults \"pub_date\". title character string specifying title plot. Defaults empty string. subtitle character string specifying subtitle plot. Defaults empty string. ylab character string specifying label y-axis. Defaults empty string. p ggplot2 plot object vintage data added. Defaults NULL.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/plot_vintages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Vintages Data — plot_vintages","text":"ggplot2 plot object representing specified vintage data visualization.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/plot_vintages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Vintages Data — plot_vintages","text":"plot_vintages function designed handle data frames wide long formats. ensures provided data frame includes necessary columns plotting. dim_col column contains 30 unique values, recent 30 plotted. Additionally, function supports custom themes color scales using scale_color_reviser, scale_fill_reviser, theme_reviser. function raises error : type argument one \"line\", \"point\", \"bar\", \"boxplot\". specified dim_col column df. title, subtitle, ylab character strings.","code":""},{"path":[]},{"path":"https://p-wegmueller.github.io/reviser/reference/plot_vintages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Vintages Data — plot_vintages","text":"","code":"# Example data df <- data.frame(   time = rep(seq.Date(from = as.Date(\"2022-01-01\"), by = \"month\", length.out = 12), 3),   value = runif(36, 50, 100),   pub_date = rep(c(\"2022-01-05\", \"2022-02-07\", \"2022-03-03\"), each = 12) )  # Line plot plot_vintages(   df,    type = \"line\",    dim_col = \"pub_date\",    title = \"Line plot\",    subtitle = \"Randomly generated data\"   )   # Point plot plot_vintages(   df,    type = \"point\",    dim_col = \"pub_date\",    title = \"Scatter plot\",    subtitle = \"Randomly generated data\"   )   # Bar plot plot_vintages(   df,    type = \"bar\",    dim_col = \"pub_date\",    title = \"Bar plot\",    subtitle = \"Randomly generated data\"   )   # Boxplot plot_vintages(   df,    type = \"boxplot\",    dim_col = \"pub_date\",    title = \"Boxplot\",    subtitle = \"Randomly generated data\"   )"},{"path":"https://p-wegmueller.github.io/reviser/reference/reviser-package.html","id":null,"dir":"Reference","previous_headings":"","what":"reviser: Tools for Studying Revision Properties in Real-Time Time Series Vintages — reviser-package","title":"reviser: Tools for Studying Revision Properties in Real-Time Time Series Vintages — reviser-package","text":"learn reviser, start vignettes: browseVignettes(package = \"reviser\")","code":""},{"path":[]},{"path":"https://p-wegmueller.github.io/reviser/reference/reviser-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"reviser: Tools for Studying Revision Properties in Real-Time Time Series Vintages — reviser-package","text":"Maintainer: Marc Burri marc.burri91@gmail.com (ORCID) [copyright holder] Authors: Philipp Wegmueller philipp.wemueller@seco.admin.ch [copyright holder]","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/summary.lst_efficient.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of Efficient Release Models — summary.lst_efficient","title":"Summary of Efficient Release Models — summary.lst_efficient","text":"Provides detailed summary regression model hypothesis test first efficient release identified get_first_efficient_release function.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/summary.lst_efficient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of Efficient Release Models — summary.lst_efficient","text":"","code":"# S3 method for class 'lst_efficient' summary(object, ...)"},{"path":"https://p-wegmueller.github.io/reviser/reference/summary.lst_efficient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of Efficient Release Models — summary.lst_efficient","text":"object output object get_first_efficient_release function. object must class list_eff_rel. ... Additional arguments (used).","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/summary.lst_efficient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of Efficient Release Models — summary.lst_efficient","text":"function return value. prints summary console.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/summary.lst_efficient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of Efficient Release Models — summary.lst_efficient","text":"function prints following information: index first efficient release. summary regression model fitted efficient release, includes coefficients, R-squared values, relevant statistics. hypothesis test results efficient release, showing test statistic p-value null hypothesis unbiasedness efficiency. function assumes object includes: e: index first efficient release (0-based). models: list linear regression models release. tests: list hypothesis test results corresponding release.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/summary.lst_efficient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of Efficient Release Models — summary.lst_efficient","text":"","code":"# Example usage df <- get_nth_release(tsbox::ts_pc(reviser::gdp_us), n = 1:4)  final_release <- get_nth_release(tsbox::ts_pc(reviser::gdp_us), n = 10)  # Identify the first efficient release result <- get_first_efficient_release(df, final_release, significance = 0.05) summary(result) #> Efficient release:  0  #>  #> Model summary:  #>  #> Call: #> stats::lm(formula = formula, data = df_wide) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.90728 -0.20657  0.00298  0.19586  0.86728  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.01646    0.02401   0.686    0.494     #> release_1    0.96538    0.01862  51.836   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3026 on 206 degrees of freedom #>   (9 observations deleted due to missingness) #> Multiple R-squared:  0.9288,\tAdjusted R-squared:  0.9284  #> F-statistic:  2687 on 1 and 206 DF,  p-value: < 2.2e-16 #>  #>  #> Test summary:  #>  #> Linear hypothesis test: #> (Intercept) = 0 #> release_1 = 1 #>  #> Model 1: restricted model #> Model 2: final ~ release_1 #>  #> Note: Coefficient covariance matrix supplied. #>  #>   Res.Df Df      F Pr(>F) #> 1    208                  #> 2    206  2 1.8886 0.1539"},{"path":"https://p-wegmueller.github.io/reviser/reference/theme_reviser.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","title":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","text":"functions provide custom visualization theme color scales use ggplot2, inspired tsbox package.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/theme_reviser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","text":"","code":"theme_reviser(   base_size = 12,   legend.position = \"bottom\",   legend.direction = \"horizontal\" )  colors_reviser()  scale_color_reviser(...)  scale_fill_reviser(...)"},{"path":"https://p-wegmueller.github.io/reviser/reference/theme_reviser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","text":"base_size Numeric. base font size theme. Default 12. legend.position Character. Position legend. Default \"bottom\". legend.direction Character. Direction legend. Default \"horizontal\". ... Additional arguments passed ggplot2 scale functions.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/theme_reviser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","text":"customized ggplot2 theme, color palette, scale.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/theme_reviser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","text":"theme_reviser: Defines minimal theme custom adjustments axis titles, plot titles, subtitles, captions, legend positioning. colors_reviser: Provides predefined set colors, including soft black, palette suitable colorblind readers, additional colors extended use. scale_color_reviser: ggplot2 color scale uses custom colors_reviser palette. scale_fill_reviser: ggplot2 fill scale uses custom colors_reviser palette.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/theme_reviser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Visualization Theme and Color Scales for Reviser — theme_reviser","text":"","code":"library(ggplot2) ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +   geom_point(size = 3) +   theme_reviser() +   scale_color_reviser()"},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Vintages Data to Long Format — vintages_long","title":"Convert Vintages Data to Long Format — vintages_long","text":"Converts vintages dataset wide format long format, optionally adding id input list data frames. long format contains one row per combination time names_to (e.g., pub_date release), values stored single value column.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Vintages Data to Long Format — vintages_long","text":"","code":"vintages_long(df, names_to = \"pub_date\", keep_na = FALSE)"},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Vintages Data to Long Format — vintages_long","text":"df data frame, tibble, list data frames containing vintages data wide format. names_to name column create wide-format column names. Must either \"pub_date\" (default) \"release\". keep_na Logical. TRUE, retains rows NA values value column. Default FALSE.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Vintages Data to Long Format — vintages_long","text":"long-format data frame tibble. input list wide-format data frames, output single combined long-format data frame.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Vintages Data to Long Format — vintages_long","text":"","code":"# Example wide-format data long_data <- reviser::gdp_us  # Convert to wide format wide_data <- vintages_wide(long_data)  # Example list of wide-format data frames wide_list <- list(   A = wide_data,   B = wide_data )  # Convert list to long format long_data <- vintages_long(wide_list, names_to = \"pub_date\")"},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Columns to Align with Package Standards — vintages_rename","title":"Rename Columns to Align with Package Standards — vintages_rename","text":"Renames columns data frame tibble align conventions used package. Converts renamed columns appropriate data types.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Columns to Align with Package Standards — vintages_rename","text":"","code":"vintages_rename(   df,   col_time = NULL,   col_pub_date = NULL,   col_value = NULL,   col_release = NULL,   col_id = NULL )"},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Columns to Align with Package Standards — vintages_rename","text":"df data frame tibble containing data renamed. col_time Optional. name column renamed time. time column represents observation dates converted Date format. col_pub_date Optional. name column renamed pub_date. pub_date column represents release dates converted Date format. col_value Optional. name column renamed value. value column represents observed values converted numeric. col_release Optional. name column renamed release. id column used identifier converted character format. col_id Optional. name column renamed id.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Columns to Align with Package Standards — vintages_rename","text":"data frame tibble renamed columns respective data types converted (specified). original class input object preserved.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_rename.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename Columns to Align with Package Standards — vintages_rename","text":"function checks validity input data frame ensures least one column specified renaming. column renamed, also converted expected data type: time pub_date converted Date. value converted numeric. release id converted character.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Columns to Align with Package Standards — vintages_rename","text":"","code":"# Example data data <- tibble::tibble(   observation_date = seq.Date(as.Date(\"2020-01-01\"), as.Date(\"2020-06-01\"), by = \"month\"),   release_date = seq.Date(as.Date(\"2020-01-15\"), as.Date(\"2020-06-15\"), by = \"month\"),   observed_value = rnorm(6),   identifier = rep(\"A\", 6) )  # Rename columns renamed_data <- vintages_rename(   data,   col_time = observation_date,   col_pub_date = release_date,   col_value = observed_value,   col_id = identifier )"},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Vintages Data to Wide Format — vintages_wide","title":"Convert Vintages Data to Wide Format — vintages_wide","text":"Converts vintages dataset long format wide format, optionally grouping id present. wide format uses one column per unique value names_from parameter, observation dates (time) rows values (value) cell contents.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Vintages Data to Wide Format — vintages_wide","text":"","code":"vintages_wide(df, names_from = \"pub_date\")"},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Vintages Data to Wide Format — vintages_wide","text":"df data frame tibble containing vintages data long format. names_from name column whose unique values used column names wide format. Defaults \"pub_date\". : \"release\".","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_wide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Vintages Data to Wide Format — vintages_wide","text":"id column present, function returns named list wide-format data frames, one unique id. Otherwise, returns single wide-format data frame.","code":""},{"path":"https://p-wegmueller.github.io/reviser/reference/vintages_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Vintages Data to Wide Format — vintages_wide","text":"","code":"# Example wide-format data long_data <- reviser::gdp_us  # Convert to wide format wide_data <- vintages_wide(long_data)  # Example list of wide-format data frames wide_list <- list(   A = wide_data,   B = wide_data )  # Convert list to long format long_data1 <- vintages_long(wide_data, names_to = \"pub_date\") long_data2 <- vintages_long(wide_list, names_to = \"pub_date\")"}]
