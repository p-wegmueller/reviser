% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoother.R
\name{kk_to_ss}
\alias{kk_to_ss}
\title{Cast Generalized Kishor-Koenig Matrices into State-Space Form}
\usage{
kk_to_ss(FF, GG, V, W, epsilon = 1e-06)
}
\arguments{
\item{FF}{Matrix. The state transition matrix defining how the state evolves over time.}

\item{GG}{Matrix. The control matrix, representing the influence of the state on observations.}

\item{V}{Matrix. The state noise covariance matrix.}

\item{W}{Matrix. The observation noise covariance matrix.}

\item{epsilon}{Numeric. A small positive number to ensure numerical stability in covariance matrices (default: \code{1e-6}).}
}
\value{
A list containing the state-space matrices:
\describe{
\item{\code{Z}}{The observation matrix.}
\item{\code{Tmat}}{The state transition matrix for the augmented state-space model.}
\item{\code{H}}{The observation noise covariance matrix.}
\item{\code{Q}}{The state noise covariance matrix.}
\item{\code{R}}{The control matrix.}
}
}
\description{
Transforms the generalized Kishor-Koenig (KK) matrices into the state-space representation required for Kalman filtering and smoothing.
}
\details{
The state space model is represented by the following equations:

\strong{State Equation:}
\deqn{\alpha_{t+1} = T \alpha_t + R \eta_t, \quad \eta_t \sim N(0, Q)}

\strong{Observation Equation:}
\deqn{y_t = Z \alpha_t + \epsilon_t, \quad \epsilon_t \sim N(0, H)}

where:
\itemize{
\item \eqn{\alpha_t} is the state vector.
\item \eqn{y_t} is the observed data.
\item \eqn{T} is the state transition matrix.
\item \eqn{R} is the control matrix.
\item \eqn{Q} is the covariance matrix of the state disturbances \eqn{\eta_t}.
\item \eqn{Z} is the observation matrix.
\item \eqn{H} is the covariance matrix of the observation disturbances \eqn{\epsilon_t}.
}
}
\examples{
# Define example matrices
II <- diag(3)
FF <- matrix(c(0.9, 0.1, 0, 0.1, 0.8, 0.1, 0, 0.1, 0.9), nrow = 3)
GG <- matrix(c(0.8, 0.2, 0, 0.2, 0.7, 0.1, 0, 0.1, 0.8), nrow = 3)
V <- diag(3) * 0.01
W <- diag(3) * 0.02

# Generate state-space matrices
ss_matrices <- kk_to_ss(FF, GG, V, W)
str(ss_matrices)

}
